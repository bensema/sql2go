// Code generated by go-bindata.
// sources:
// template/admin_cmd.tmpl
// template/admin_command_biz.tmpl
// template/bb_admin_api_biz.tmpl
// template/bb_admin_biz.tmpl
// template/biz.tmpl
// template/curd.tmpl
// template/curd_1.tmpl
// template/curd_common.tmpl
// template/markdown.tmpl
// template/model.tmpl
// template/model_reply.tmpl
// template/model_req.tmpl
// template/op_code.tmpl
// template/page.tmpl
// template/service.tmpl
// DO NOT EDIT!

package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateAdmin_cmdTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3d\x6b\xc3\x30\x10\x86\xe7\xdc\xaf\x38\x42\x86\x16\x4a\xa6\xd2\x21\x90\x21\x34\x50\x32\xf4\x2b\xa4\x73\x7c\xb1\x0e\x5b\x75\x2c\xa9\xf6\x79\x70\x85\xfe\x7b\x91\x48\x9b\x50\xc7\xda\xf4\x3e\x0f\xf7\x72\x92\xa3\xbc\xa2\x82\xf1\xa0\xbf\x01\xa4\x77\x8c\x2b\x55\x6b\xb3\xe5\xaf\x8e\x5b\xc1\x56\x9a\x2e\x17\xf4\x30\x79\x75\xdc\x90\xd8\x06\x31\x86\xda\x14\x88\x98\x7d\xb6\xd6\x2c\xa6\xf6\x84\xa6\xd9\x59\xdb\xa8\x51\x6d\xaf\x55\x34\x77\xb6\x62\x83\xe9\xfc\x37\x25\xa2\xe8\xac\x3a\x29\xf1\xba\x43\x9d\x94\x51\xd9\x38\xc4\x11\x45\xbb\xd4\xf3\xc7\x51\x1b\x79\xb8\xc7\x8b\x9e\xc8\xb7\x38\x3a\x20\x6d\xf4\x58\xab\x5f\x9e\x9e\x26\xde\x4f\x3c\xaf\xd3\x26\xcf\x2c\xa5\x55\x57\x27\xd4\x09\x45\x69\x4d\x42\x23\x35\x8a\x84\xa6\x19\x84\xcb\x0f\x88\x2d\xda\x08\x40\x6e\x4d\x2b\x78\x03\x93\xfd\x19\x2c\x51\x5b\x21\xf0\xbe\x21\x53\x30\xce\x2a\xee\xef\x70\xb6\xc3\xc5\x12\xe7\x21\xc0\xc4\xfb\xf9\x8e\x0e\x47\x7e\xa1\x9a\x9f\x6c\x08\x2b\xa5\x86\xe1\x9a\x8f\xc3\xf0\xc3\x29\x12\x1e\xe6\xef\x1d\x37\xfd\x30\x7e\xa3\x82\x5b\xf0\x9e\x8d\x0a\x01\x6e\xe1\x27\x00\x00\xff\xff\x20\xaa\xa9\x26\x4e\x02\x00\x00")

func templateAdmin_cmdTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateAdmin_cmdTmpl,
		"template/admin_cmd.tmpl",
	)
}

func templateAdmin_cmdTmpl() (*asset, error) {
	bytes, err := templateAdmin_cmdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/admin_cmd.tmpl", size: 590, mode: os.FileMode(420), modTime: time.Unix(1616847902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAdmin_command_bizTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x82\x2b\x04\x81\xb4\x70\x64\x60\x51\xf4\x10\x20\x87\x34\x46\x8d\x5c\xb2\xdd\xc6\xdb\xab\x4b\x91\x63\x99\x5b\x91\x74\x29\xca\xa9\x2d\xe8\xbf\x2f\x48\xc9\x89\x3f\x64\x59\x76\xdb\x00\x2d\x7c\x4a\xe4\x99\x37\x7c\xf3\xf8\x31\x6f\x46\xe8\x17\x92\x00\x9e\x1a\x33\x43\x88\x8b\x99\xd2\x06\x07\xc8\xf3\x27\xc2\xf8\xc8\xf3\x13\x6e\xa6\x79\x1c\x51\x25\xfa\x31\xc8\x0c\x04\xe9\xc7\x60\x62\x6e\xfa\x42\x31\x48\xdb\x53\x32\xd0\x73\xd0\x7d\x5b\xbb\xcf\xa5\x01\x2d\xc9\x01\x44\x6e\x78\x9a\xed\x49\x49\x79\xac\x89\x5e\xf4\x63\xbe\xf4\x91\xf7\xcd\x70\x01\xb8\x2d\xcf\x26\x6c\x95\x4a\xb8\xbc\x4a\x94\xe4\xd4\xfe\xb7\x15\xcb\xa6\x6a\x96\xcd\x34\x97\x49\x9f\x01\xe5\xc2\x52\x0d\x11\x9a\xe4\x92\x62\xc2\x04\x97\x77\x4a\x08\x22\x59\x40\xf1\x9f\x09\x97\xd1\x9d\x92\x06\xbe\x99\x10\x17\xc8\xa3\x82\xf5\xf0\x18\x5f\xdf\x60\x1a\x0d\xc1\x04\x4e\x9b\xe8\x76\x0d\x15\x22\x2f\x7b\xe2\x86\x4e\x31\x15\xcc\x42\x8a\x42\x13\x99\x00\xbe\xf8\x02\x8b\x1e\xbe\x18\x59\x70\x54\x96\xc8\xa3\x24\x03\x1c\xf3\x65\x54\x14\xd1\x88\xc4\x29\x3c\x10\x01\x43\x55\x96\x1f\x48\x02\xd9\x35\xf2\xbc\xcd\xc0\xa7\xbf\xea\x50\x40\xc3\x16\xf4\x2d\x63\xcd\xd8\x5b\xc6\xda\x91\x03\x48\x9b\x91\x03\x48\xdb\x91\xff\xe4\xa0\x17\xcd\x58\x17\x6a\x47\xff\x3b\x63\xc4\x40\x33\xbc\x8a\x59\x3c\xc6\x18\x17\x05\x48\x66\xb5\x2b\x51\x89\xf6\x09\x5b\x14\x7c\x82\xe1\x2b\xde\x2c\x85\xfd\x84\x08\xf8\x08\x59\x9e\x1a\xbf\x2c\xab\xed\xde\x2b\xf0\xee\xce\x0b\x5b\xfe\xb2\xda\xef\xf7\x5c\xb2\xed\x26\x3e\xc2\xd7\xa2\x44\xde\x58\x69\x06\xfa\xdd\x62\xfd\x94\x54\x12\xf8\x2e\x32\x8e\x17\x7e\x88\xbc\x71\xa6\xb4\x69\xc8\xb1\x3f\xbb\xb8\xcc\x45\x43\x58\xe6\xa2\x42\xf3\x25\x34\xa1\xf9\x12\xfc\x95\x52\xb5\x38\xff\xf5\xf0\x05\x37\xe0\xe8\x57\x8c\x07\x90\x51\x7c\x55\x96\x75\x9e\x8b\xbe\x44\xa2\x3b\x95\xe6\x42\xda\xb6\xca\xb2\xb7\xb3\x44\x7b\xfe\xf3\xe2\xd5\x0e\x6c\xa7\x0e\x55\x4a\x64\x32\x5a\xcc\x00\x63\xdf\xdd\xeb\x68\x64\xef\x6e\x47\x36\xe3\x89\x56\xe2\x58\x4a\x0e\xf4\xcc\xab\x35\xd3\xa8\xa3\x8b\x1b\xf5\x5c\x1a\x57\x47\xb3\xfa\xb8\xda\xf8\xea\xb6\x15\x9d\x95\xcb\x8c\x7d\xbc\x5e\x54\x13\xd1\x2e\xcb\xa1\x5a\xe7\x89\x6f\x0e\xf4\xbe\x46\x00\xd2\x0c\xf0\x89\xfb\xd7\x89\xc9\x0b\x30\x70\x53\xc0\xaa\x7d\x2f\x4d\xd0\xce\x30\x0c\x3b\xae\xf0\x5e\x2b\x71\xf2\x2a\xee\xb4\x74\x5e\x6a\xa4\x4e\x5f\xc8\xa8\x7a\x99\xe3\x54\xe7\xd2\x1c\x29\xf7\x31\x1a\x9f\x46\xe8\xed\x9b\xef\xa0\xf4\xf6\xcd\x4f\x20\x55\xcf\xf5\x68\x50\xcf\x77\x47\xcf\x1b\x8f\x19\x1d\x1f\x78\xf0\xaa\x47\x75\x85\x7f\x80\x27\x7b\x9c\x1e\xdd\x85\xeb\xc4\xb3\x53\xff\x1d\x88\xb4\x3d\x2a\x9e\x88\xfe\xae\xa6\x8c\xad\x55\x0f\x1c\xfb\xeb\xa3\xf5\x74\x37\xd8\x0d\x17\xfb\xfd\x90\x8b\xed\x03\x60\x07\x4b\xe8\x72\xf9\x12\x76\x82\x76\x80\x84\x08\x79\xa0\xb5\x95\x41\x44\x9f\x40\xf3\xc9\x22\x08\x91\xa7\x61\x96\x2e\x7a\xb8\x8e\x64\x7a\xde\x6c\x5b\x02\xda\xc3\x22\x1a\x12\x01\x77\x8a\x41\x0f\xdb\xc5\x56\x8e\xb0\xf2\x49\x03\x62\x88\xcd\x7a\x29\x18\xa2\x12\xed\x9b\xc7\xce\xb4\xec\x4e\xe3\x39\xd1\x58\xe0\x6a\x1a\x6f\xf3\x78\xa6\x4f\xa3\xc7\xa9\xca\x53\xf6\x8e\x4b\x16\x5c\x3a\x26\x13\xd7\xc0\x1f\x37\x58\xf2\xd4\xd6\xf1\x26\xc2\x44\x1f\x34\x97\x26\x95\x81\xa3\xe2\xd5\xf8\xe6\x1e\x1d\x9d\xcd\x0e\x2f\xf7\xb7\x28\x79\x7a\xb0\x41\xe7\xad\x1a\x1a\xb4\x0d\x48\x78\x0a\x32\xa3\x73\x6a\x1c\xd7\xfb\x41\x7d\x11\xb8\x34\xf6\xcf\xe7\x89\xd2\xe2\xda\xe7\xcc\xff\x8c\x3c\x6f\xc5\x08\x57\xe3\x61\x15\xb5\xae\x67\x4c\x15\x03\x9b\x54\x86\x7b\xc4\x99\xff\x08\x71\x5c\x2b\x3d\x3c\x5f\x13\x67\x1e\xdd\x0f\xbe\x4b\x9e\xda\x3e\xfe\x4a\x02\x1d\xbe\x29\x75\x53\x47\x48\xd5\xed\xb2\xac\xcc\xf2\x2b\xdf\x97\xb6\x33\xb1\xa2\x74\xd2\x9d\xa9\x1e\xfc\xb3\x59\x3f\x9b\xf5\xb3\x59\x3f\x9b\xf5\xb3\x59\x3f\x9b\xf5\xb3\x59\xff\xe1\x66\xfd\xb7\x34\xe8\xaf\x6a\xca\xad\xdb\xdc\xb0\x9a\xaf\x64\xb3\x5f\xd9\x5a\xff\x94\x36\x8f\x32\xcb\xbf\xb7\x41\xee\x6e\x8a\xdd\xc3\xb2\xfa\xe7\xff\x00\x00\x00\xff\xff\xac\x11\x91\xce\xd9\x19\x00\x00")

func templateAdmin_command_bizTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateAdmin_command_bizTmpl,
		"template/admin_command_biz.tmpl",
	)
}

func templateAdmin_command_bizTmpl() (*asset, error) {
	bytes, err := templateAdmin_command_bizTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/admin_command_biz.tmpl", size: 6617, mode: os.FileMode(420), modTime: time.Unix(1617275549, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateBb_admin_api_bizTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x41\x6f\xd3\x30\x14\xc7\xcf\xf5\xa7\x78\x8a\x76\x48\xa6\x62\x0b\x8e\x48\x1c\x32\x06\x95\x38\x6c\x63\x2d\x5c\x91\x6b\x3f\x5c\x6b\x8e\x6d\x1c\xa7\xa2\x8a\xfc\xdd\x51\x9c\x4d\x0c\xa6\x44\x9d\xda\x5b\xa2\xe7\xf7\xcb\xef\xe5\xfd\xed\xb9\x78\xe0\x0a\x41\x38\x1b\x83\x33\x06\x03\x21\xba\xf1\x2e\x44\x28\xc9\xa2\x50\x3a\xee\xba\x2d\x15\xae\x61\x5b\xb4\x2d\x36\x9c\x29\xc7\x65\xa3\x2d\x53\xc6\x6d\xb9\x29\xe6\x0f\xb5\x18\xf6\x18\xd8\x2e\x46\xcf\xb4\x8d\x18\xec\x8b\x16\xa5\xed\x1b\xe5\xac\x16\xc3\x53\x41\x2a\x42\x7e\x76\x56\x40\xf9\x23\xee\x74\x0b\x97\xb5\xd7\x75\x17\x77\x15\xdc\xa3\xd2\x6d\xc4\x70\x75\x55\x0f\xe8\x7b\xd7\x45\x2c\x15\x5c\x2a\x6d\x69\x7e\x09\xab\xe0\x3a\x5f\x41\x4f\xfa\x3e\x70\xab\x10\x2e\x1e\xf0\xb0\x84\x8b\x0d\xbc\xff\x00\x34\x25\xb2\x50\x74\xf5\x69\x53\x16\x8c\x7b\xcd\xf6\x6f\x59\xdf\xd3\x0d\xdf\x1a\xbc\xe1\x0d\xa6\xc4\x3c\x57\xd8\x16\x4b\xc8\x5f\xa6\xcf\x8b\x2b\xf7\xfd\x5d\x4a\x77\x43\xbd\x02\x00\x18\x48\x77\xb7\xeb\x69\x14\x97\x72\x06\x54\x4b\x99\x31\xc7\x90\x24\x9a\x19\xd2\x35\x9a\xe7\xa4\xb9\xe9\x7e\x75\x18\x0e\x33\xa8\xaf\x43\xfd\xb8\xe9\x3a\x2f\x79\xc4\x19\xd6\xb7\x7c\xa0\x02\xd2\xf7\x68\x65\x4a\x84\x24\x32\xb9\x95\x89\x7d\x4f\xfc\xff\x52\x8c\x2b\xff\xe8\x6c\xc4\xdf\x71\x58\xf7\x22\xa0\x37\x87\x25\x60\x08\x03\x73\x0c\x26\x5d\x87\x3d\xfd\xac\xad\xfc\x97\x33\x52\x4a\x51\x91\xc5\x53\x1e\x69\xce\xd3\x97\xf5\xed\x4d\x29\x96\xf0\x97\x55\x91\x57\xb8\xd5\x52\xbe\xca\xec\x7f\xab\xdc\x7f\x6e\xa9\x6b\x34\x27\x49\xe5\xfe\x73\x4b\xe5\x9c\x9d\xa4\xf5\x48\x38\xb7\xd8\x18\xda\x93\xcc\x9e\x10\xc7\xaa\x3d\x5e\x8f\x3f\x01\x00\x00\xff\xff\xd9\x66\x15\xa5\x85\x05\x00\x00")

func templateBb_admin_api_bizTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateBb_admin_api_bizTmpl,
		"template/bb_admin_api_biz.tmpl",
	)
}

func templateBb_admin_api_bizTmpl() (*asset, error) {
	bytes, err := templateBb_admin_api_bizTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/bb_admin_api_biz.tmpl", size: 1413, mode: os.FileMode(420), modTime: time.Unix(1617103967, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateBb_admin_bizTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd2\xb1\x6a\xf3\x30\x10\x07\xf0\x39\x7a\x8a\x23\x64\xb0\x43\x3e\x79\xff\xa0\x83\x69\x68\xb7\xd2\xa6\xe9\x03\xc8\xd2\x55\x3d\x62\x4b\xee\x49\x2e\x75\x84\xde\xbd\x38\xd9\x42\x06\x4f\x1e\x0e\x8e\xe3\x0f\xff\xdf\x70\xbd\xd2\x27\x65\x11\x02\xf2\x0f\x69\x14\x82\xba\xde\x73\x84\x42\xac\xd6\x96\xe2\xd7\xd0\x48\xed\xbb\xaa\x41\x17\xb0\x53\x95\xf5\xca\x74\xe4\xaa\xce\x1b\x6c\xd7\xf7\x33\x2d\x35\xac\x78\xac\x1a\x3a\xdf\x24\x2c\xb9\x7f\xd6\x3b\xd2\xd3\xb6\x16\xa5\x10\x29\xb1\x72\x16\x61\x73\xc2\x71\x07\x9b\x23\xfc\x7f\x00\x99\xb3\x10\x9f\x83\xd3\x50\x04\xd8\xbe\x5f\x61\x25\x3c\x91\x33\x29\xc9\xa3\x6a\x5a\x7c\x51\x1d\x3e\xfb\x9c\x5f\x95\xc5\x42\xc3\xd6\x92\x93\x8f\xde\x45\xfc\x8d\x25\x14\x8c\x7d\x3b\xc2\xf6\x62\x94\xf5\xe4\xad\x7b\x3a\x4c\xc7\x1d\x20\xf3\x34\x9e\x4b\x48\x62\xc5\x18\x07\x76\x10\xa4\xf1\x07\xfc\x1e\x30\xc4\x42\xef\xa0\xa1\xb3\xbc\xd7\x14\x4a\x71\x57\x76\x9b\xad\x8d\x59\x06\x55\x1b\x33\x93\xb4\xc7\x76\x19\xd2\x1e\xdb\x99\xa4\xb7\x01\x79\x5c\x06\x75\xa9\x9a\xc9\xfa\xe8\x8d\x8a\x0b\x3d\xd5\xb5\xeb\x02\x4b\x09\x9d\xc9\xf9\x2f\x00\x00\xff\xff\xab\x9c\x59\xa3\x8f\x03\x00\x00")

func templateBb_admin_bizTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateBb_admin_bizTmpl,
		"template/bb_admin_biz.tmpl",
	)
}

func templateBb_admin_bizTmpl() (*asset, error) {
	bytes, err := templateBb_admin_bizTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/bb_admin_biz.tmpl", size: 911, mode: os.FileMode(420), modTime: time.Unix(1617104223, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateBizTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x41\x8f\x9b\x30\x10\x85\xcf\xf1\xaf\x18\xa1\x3d\x40\x44\xe1\x5e\xa9\x97\x66\xd5\xa8\x97\xaa\x5a\xd1\x53\xd5\xc3\x80\x27\xd4\x0a\xb6\x83\x31\x55\x22\x8b\xff\x5e\x41\x9a\xb6\x4a\x20\xd9\x84\x2c\x39\x44\x41\xc8\xf6\xfb\x1e\xcc\xbc\x61\x83\xd9\x1a\x73\x02\x8e\x9a\x31\x21\x37\xda\x58\xf0\xd9\xcc\xe3\x68\x31\xc5\x8a\xe2\xaa\x2c\x3c\x36\xf3\x72\x61\x7f\xd6\x69\x94\x69\x19\xa7\xa4\x2a\x92\x18\xa7\x64\x53\x61\x63\x8e\x3a\x16\xca\x92\x51\x78\x61\xa5\xd4\x9c\x8e\x97\xe4\x42\xbd\xcb\xb5\x12\x59\x7b\xe5\xb1\x80\x31\xe7\x0c\xaa\x9c\xe0\x69\x4d\xbb\x10\x9e\x12\x78\xff\x01\xa2\xa6\x61\xce\x89\x15\x50\x09\x51\x82\x69\x41\x5f\x50\xd2\x52\x83\xb7\x44\x49\x2f\x54\xd5\x85\xf5\x9a\x86\xad\x6a\x95\x81\xcf\x61\xfe\x8c\x3a\x80\x85\x21\xb4\xe4\xdc\xff\x3b\x9a\xc6\xcf\x60\x9e\x0b\x15\x2d\xb4\xb2\xb4\xb5\x21\xe4\x28\x69\xa1\x39\x41\x65\x8d\x50\x79\x08\x12\xe6\x1d\x6a\x74\xbc\x35\x00\xdf\x74\x5a\x50\x95\x45\xb4\x97\x0d\x81\x8c\x69\x7f\xda\x04\xe0\xd8\xcc\x90\xad\x8d\x82\xc3\x13\x89\x86\x20\x42\xe0\x11\x4f\xff\xa9\x87\x20\x03\xd6\xb0\x23\x0b\xcf\x54\xd0\xe9\xee\x8f\xbb\xcf\xfc\xb2\x0d\xc1\x5b\x8a\x60\xcf\xd6\x87\x76\xee\xf0\x53\x3c\xc1\x7b\xf8\xbe\x6d\x78\x8f\xbb\x6b\xf8\x42\x58\xd3\xee\xef\xbd\x5f\x58\xd4\xb4\x27\x5c\x61\x46\xae\x39\x83\x7f\x4e\xbb\x0f\xbf\x53\xfa\x23\x71\x95\x95\x64\x7b\x62\xc6\x6e\x61\xde\xd6\x40\xb2\x9d\xd4\x58\x4b\xd2\x8a\x5f\x65\x6c\x49\x76\x5c\x01\xf9\x03\xed\x10\x9e\x29\xfb\x41\xd1\x57\x16\xd6\x27\xa1\xf8\xf5\x9d\x6b\xa8\x3c\xf4\x6e\xdf\x01\x2f\x54\x06\xe0\x7f\xff\x71\x83\x9f\x7e\x9e\x53\x33\x86\xca\x1e\x37\x5f\x31\xa7\xbe\x13\x12\x6d\xb1\xb8\x93\xad\xae\xe4\x86\x0d\x5c\x40\x18\xeb\xe4\x91\xef\x66\x98\x69\xd0\x95\x73\x54\x54\x74\xeb\xc4\x98\x74\x40\x8c\x1c\x0b\x77\x99\x02\x63\xb3\x7f\x8a\xa8\x7f\xbb\x80\x9f\x22\xcf\xef\x96\xe2\x6f\x1a\xda\xb7\x47\xf5\xa3\x92\xf9\x1e\x79\x3c\x61\xfc\x8e\x0c\xdd\x47\x66\xec\x01\xdd\x39\x52\xbc\xfb\x5e\xef\xfe\x7f\x07\x00\x00\xff\xff\xf1\xc8\x77\x4f\x61\x0c\x00\x00")

func templateBizTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateBizTmpl,
		"template/biz.tmpl",
	)
}

func templateBizTmpl() (*asset, error) {
	bytes, err := templateBizTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/biz.tmpl", size: 3169, mode: os.FileMode(420), modTime: time.Unix(1617278236, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateCurdTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\xcf\x6e\xe3\x36\x10\xc6\xcf\xe2\x53\x4c\x75\x08\xa4\x40\xa5\xdb\xab\x01\x1f\x1a\x67\xb3\x08\x10\x64\x91\x75\xda\x1e\x16\x8b\x80\x92\xc6\x0e\x37\x14\x69\x91\x54\xb3\xae\xe1\xb7\xe8\xad\x40\x5f\xa5\x4f\x53\xa0\x8f\x51\x90\x94\xfc\x67\xad\xc4\xce\x6e\x7a\x8a\x4d\x0e\x87\xdf\xfc\x66\xf8\xc5\x73\x56\x3c\xb0\x19\x02\x97\x16\xb5\x64\x82\x10\x5e\xcd\x95\xb6\x90\x90\x28\x9e\x71\x7b\xdf\xe4\xb4\x50\xd5\x20\x47\x69\xb0\x62\x03\xc1\x73\xcd\xf4\x62\x50\x28\x69\xf1\xb3\x8d\x9f\x8f\x32\xb5\x88\x49\x84\xd2\x9a\x5a\x40\x8c\xd2\xce\x14\xe5\x6a\x80\xd2\x0e\x4a\xce\x04\x16\xb6\x0d\x89\x8d\xd5\x5c\xce\x4c\x4c\x52\x42\xa6\x8d\x2c\x60\xac\x91\x59\x5c\x2e\xe9\x2d\xcb\x05\x5e\xb3\x0a\xdf\xaa\xd5\x2a\x29\xe0\xb4\xbd\x9a\x8e\xc3\xdf\x0c\xca\x1c\x4e\x4d\x2d\xe8\xf9\x59\x06\x2a\xff\x04\xa7\x95\x2a\x51\xd0\x2f\xcf\xa6\x90\xa0\xd6\x80\x5a\x2b\x9d\xc2\x92\x44\x79\xc3\x45\x89\x1a\x86\x23\x30\xb5\x38\x0b\xdf\x92\x94\x44\x75\x83\x7a\x91\x01\xd3\x33\xe3\x36\xdb\x38\x7a\x29\x0d\x6a\x9b\xa8\xfc\x53\x48\x9c\xa4\x29\x1d\x2b\xd1\x54\xd2\xf8\xc5\xee\x73\x4a\x29\x4d\xe9\x2f\x4c\x34\x18\x36\x2e\x38\x8a\xb2\x5b\xbf\x71\xc9\xdd\x2d\x77\x99\xd3\x02\x23\x28\x73\xfa\xe6\x33\x16\x6d\x3d\x49\x91\xc1\x96\x00\x77\x86\x44\x1a\x6d\xa3\xa5\x8b\x27\xab\x16\xd0\x39\x0a\xdc\x07\x74\xb6\xb8\x2c\x0f\x42\xe2\x25\x04\xde\x7b\x48\x1c\xbe\xe1\x08\x4e\xfa\x09\x2e\x57\x2f\x87\x16\x64\xee\x42\xfb\xf5\x1e\x35\x26\x61\x2c\xe8\x9b\x9b\x24\xe6\x65\xec\x54\xa5\xaf\x47\xe7\xe7\x79\xd9\x33\x3e\x2f\xa3\x93\xc1\x03\x2e\xd6\x9f\x7f\x73\xfd\x0c\xef\x64\xca\x0a\x5c\xee\xcf\xd3\xeb\xc3\x0b\x55\xec\xc2\x9b\xa0\x4d\x1e\x70\xd1\x0a\xfa\xbf\x60\xae\x41\xbe\x45\xfb\xcd\x33\xf6\xcc\xa3\x0c\xc2\x76\x19\xbe\x2a\xc2\x09\x3a\x9b\xe9\x79\x9f\x17\x5a\x55\x1d\xb6\x00\x77\x1b\xf3\x71\x5c\xd7\x50\xfd\xca\x7b\xf5\xf8\x34\x58\x3a\x29\x98\xdc\x73\x83\x3d\xdc\x17\x5c\x96\x2f\x36\x3d\x8d\x75\xc7\xb7\xef\xfc\x7b\xac\x43\x13\x0c\x7c\xf8\x78\x7c\x1f\x0c\x8c\x9e\x8e\x77\xad\xe8\x23\x3e\xa9\x45\x6f\x09\x1a\xeb\x0c\x26\x37\x57\xb7\x8b\x39\x5e\x71\x63\x5d\xe5\xea\xd1\x84\x6b\x87\x1b\x86\xcf\x4d\x26\x9f\xfa\xe8\xef\x46\x20\xb9\x70\x22\x3b\x78\xd1\x8a\x44\x25\x4e\x51\x83\xcb\x49\xc7\x42\x19\x74\xed\x99\xaa\x76\xe5\xda\xa5\xf4\x75\x1d\xf1\x48\xdb\xae\xfa\x83\x4f\x34\xad\x47\xca\x5a\x8b\x13\xd3\xe1\x63\xf3\x39\xca\xd2\xa3\xf7\xff\x9a\x52\x2f\xf5\x88\x96\xdf\x2a\xcb\xc4\xeb\xf4\xdd\xba\x54\xce\xb7\xbe\x6c\x71\xd8\x18\xc1\x0f\x5f\xdf\xc9\xb1\x6a\xa4\xfd\x9a\x77\x70\xe2\x2f\xdf\x1f\xff\x43\x37\x1f\x28\x37\x73\x9e\xe0\x84\x6d\xbc\xa7\xb3\xef\x0f\x1f\x77\xac\xfb\xdb\xec\xda\x78\x53\x51\x7e\xe7\xa4\xb5\x88\x49\xbb\xe6\x0e\x9a\x47\x6e\x8b\xfb\xb5\x98\x25\x89\x0a\x66\x70\x7b\xfe\x87\x24\xda\x64\x39\xec\x56\xbb\x09\x3c\xf6\xe7\x33\xc4\x3e\x26\x39\x4d\x63\x3f\x73\x64\x3b\xb4\xfb\x78\xc8\x02\x89\x7f\x72\x1a\x6b\x7a\x59\xba\x51\x8f\x63\x3f\xe9\x7d\x99\xfa\xcd\x32\x1c\x4d\x5b\x05\x83\x01\x14\x4e\x14\xfc\xfb\xf7\x1f\xff\xfc\xf9\x97\x4f\xde\x11\x1a\x8d\x76\x6a\xdb\x7a\xdc\x9b\x3b\xd6\xae\xeb\x92\xdd\x19\xf7\x23\x75\xe8\x44\xad\x71\xbb\xeb\x26\x6e\xb9\xe3\x1d\x97\x68\x8a\xd8\x81\x0a\xe1\x23\x68\x15\x9e\xa3\x29\xdc\x38\xd1\x77\xba\x44\x7d\xb6\xe8\xf8\xc6\xac\x3f\xfe\xa7\xbd\xf0\x12\xa7\xac\x11\xf6\xa8\x58\xa7\x57\x85\x6f\xae\xf5\x7e\x9c\xc2\xcf\x5d\x3a\x99\x0b\x6e\xb7\xc3\x33\x88\xb3\xb8\xb5\xae\xbb\x0c\xda\x63\xee\x88\x66\x72\x86\xb0\x95\x67\x19\x7c\xa8\xb8\xc7\xe2\xe1\x52\x4e\xac\xde\x1d\x9b\xf5\xe1\xe0\x7b\xbd\x6d\x6b\x2f\x4d\x7c\x09\x69\xf0\xae\x15\x89\x36\xd3\x42\xdf\x4d\xa7\x06\x6d\xe2\x25\x5e\x37\x15\x7c\x0f\x3f\xa6\x70\x1a\x50\xf3\xdf\x71\xeb\x2d\xd0\x2b\x5e\xb5\xb5\xb4\x3b\x4f\x35\x70\x45\xfe\x0b\x00\x00\xff\xff\x73\x8d\x4e\x6a\x76\x0c\x00\x00")

func templateCurdTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateCurdTmpl,
		"template/curd.tmpl",
	)
}

func templateCurdTmpl() (*asset, error) {
	bytes, err := templateCurdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/curd.tmpl", size: 3190, mode: os.FileMode(420), modTime: time.Unix(1612870525, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateCurd_1Tmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xd1\x6e\xdb\x36\x17\xbe\xb6\x9e\xe2\xfc\x44\x5b\x48\x81\x22\xf7\x07\x86\x5d\x04\xf0\xc5\x92\xb6\x41\x81\xa2\x5d\x6b\x6f\xbb\x28\x8a\x80\x96\x8e\x14\x36\x12\x69\x93\xf4\xea\x4c\xd0\x5b\xec\x6e\xc0\x5e\x65\x4f\x33\x60\x8f\x31\x90\x94\x6c\xb9\x76\x62\x3b\x71\xbb\x3a\x70\x81\x06\xb2\x78\x48\x7e\xe7\x3b\x87\xe7\x50\xdf\x88\xc6\x57\x34\x43\x60\x5c\xa3\xe4\x34\xf7\x3c\x56\x8c\x84\xd4\xe0\x7b\x1d\x92\x50\x4d\x87\x54\x61\x57\x8d\x73\xe2\x75\x90\x6b\x35\xce\x81\x20\xd7\x99\x88\x98\xe8\x22\xd7\xdd\x84\xd1\x1c\x63\x5d\x9b\x94\xe5\x31\xb0\x14\x70\x0c\xd1\x80\x0e\x73\x7c\x4d\x0b\x3c\x17\x40\xce\x69\x81\xef\x50\x4d\x72\x4d\xa0\xaa\xbc\x0e\x49\x0b\x5d\x9b\x23\x4f\xec\x9b\x8c\xe9\xcb\xc9\x30\x8a\x45\xd1\x1d\x22\x57\x58\xd0\xee\x10\xf5\x90\xe9\x6e\x21\x12\x34\x8b\xb7\x4d\x32\xc6\x8f\x33\xc1\x59\x6c\x9e\xcc\x98\xd2\x92\xf1\x4c\x11\x2f\xf0\xca\x72\x0d\x84\xaa\xf2\xd2\x09\x8f\xe1\x4c\x22\xd5\x58\x96\x6d\xc3\xaa\xf2\x63\x38\xca\x18\x8f\xce\x04\xd7\x38\xd5\x21\x24\x43\x38\x52\xe3\x3c\x7a\x76\x1a\x42\x46\x0b\x3c\x13\x09\x82\xdb\x2f\x04\x31\xfc\x08\x47\x16\x61\xf4\xf9\x42\x01\xf8\xd2\x6e\x08\x66\xb6\xdb\x3b\x04\x94\xd2\xfc\x17\x32\x80\xd2\xeb\x0c\x27\x2c\x4f\x50\xc2\x49\xcf\x18\x9d\xba\x5f\x7e\xe0\x75\xc6\x13\x94\xd7\x21\x50\x99\x29\x33\x58\xdb\x45\x2f\xb9\x42\xa9\xfd\xb4\xd0\x51\x7f\x24\x19\xd7\xa9\x4f\x1e\xab\x8b\xc7\x8a\x58\x28\x0e\x80\x1f\xcc\x81\x06\x41\x74\x26\xf2\x49\xc1\x95\x6f\xc6\x9b\xe7\x20\x8a\xa2\x20\xfa\x99\xe6\x13\x74\x03\x2f\x18\xe6\x49\xf3\xfe\xad\xd9\xdc\xa0\x90\xa8\x27\x92\x43\x32\x8c\x9e\x4f\x31\xae\x19\xf1\xe3\x10\x5a\xf0\xcc\x0c\xaf\xf2\x1c\xa5\xcf\x30\xc7\x65\x4a\x4f\xaf\x5f\x26\xdb\xd1\xca\x12\x93\x92\x01\xf8\x8b\x74\x19\xb6\x4f\x7a\xf0\x64\x35\xe1\x65\xb5\x3d\xa1\x0e\xf0\x76\x84\xfe\x72\x89\x12\x7d\x77\x1c\xa2\xe7\x6f\x7d\xc2\x12\x62\x20\x07\x2d\xe6\x2e\x5c\xa4\x7b\x1b\x70\xd7\xb0\x8c\x52\xce\x78\xfc\x69\x94\xac\x48\xcd\xbb\xf2\x18\xc2\x15\x5e\xcf\xde\xfd\x6a\xa2\xee\x4e\x7c\x4a\x63\x2c\xab\xaf\x40\xb3\xf3\x67\x3b\x9a\xfb\xa8\xfd\x2b\xbc\xae\x01\x7f\x29\xda\x37\xa0\x7c\x30\x5d\x22\x5d\x4f\x1d\xe9\x83\xe9\x81\xf4\x39\xe9\x7a\xba\x2d\xe9\xe7\xa8\x77\x58\x2c\x6e\x29\xc6\x9f\x17\x5e\x63\xba\x53\xb2\xfb\x68\xfa\xe0\x8a\x22\xfb\x42\x8a\xa2\x21\xd0\x31\xbe\x4d\x40\x36\x8b\xc0\x2c\xe7\xed\x9b\x77\xe2\xd3\xcd\x21\x88\xfa\x31\xe5\x4b\x25\x7f\x29\x30\x2f\x18\x4f\xee\xd7\x19\x25\x8e\x9b\x60\xac\x5a\xec\x1d\x8e\x5d\xc4\x14\xbc\xff\xb0\x79\xd0\x14\xf4\xa0\xa0\x57\xe8\xdf\x32\xe9\xe9\x0d\x51\xea\x8f\xf3\x95\x6e\x49\x1c\x87\x50\x0f\x1a\x26\xc4\x27\xe5\x76\x3e\x99\x73\x7a\x5b\x4e\x9b\xeb\x86\x94\xf0\xbf\x1e\x70\x96\x1b\x9c\x0d\x99\x9d\xca\xeb\x24\x98\xa2\x04\xb3\x66\x74\x96\x0b\x85\x26\x5c\xa9\xa8\xdf\xbc\x36\x4b\x5a\xd7\x36\x38\xfe\x75\x94\xed\xc4\x1b\x82\xb8\x02\xca\x0c\x8b\x01\xd3\x30\x48\x47\x23\xe4\x89\x65\xdf\x66\x5e\x60\xa1\x7e\x96\x02\x3f\xd2\x0c\xf7\x3d\x0d\x24\x8e\xa3\xf3\x1a\x52\x6f\x06\xee\x6e\xe9\x61\xf8\x78\xc5\x94\x3e\xa4\xc8\xda\x14\x19\x08\x4d\xf3\x2f\x90\x27\xda\xac\xeb\x9a\xeb\x62\x4a\xb8\x81\x1e\x3c\xdd\x7d\xc8\xcf\xc4\x84\xeb\xbb\xd4\xd8\x27\x16\xd4\x72\x69\x5d\xb7\xf3\x1a\x1a\x42\xd3\x8f\x06\xd7\xa3\x86\xba\x00\xfc\x86\xc3\xf7\x1f\x16\x2e\x18\xf7\xbb\x54\x28\xdb\xd0\x84\x1d\x79\x52\xb7\x9f\x7e\xfd\xce\x4c\x54\x9f\x98\x8e\x2f\x67\x60\x4a\xaf\x13\x53\x85\xed\x83\x72\xe2\x75\xe6\xab\xac\xef\x94\xf3\x05\x8c\xe7\x77\x9e\x3c\x8b\xd9\xed\x2b\x10\x6b\xe3\x1f\x05\xc4\x66\xb6\xd7\x36\x6d\x1e\xef\xd4\xbb\xdb\xf9\x17\x04\x81\xf9\xca\x95\x94\x67\x08\x8f\x3e\x86\xf0\x88\x69\x2c\x0c\xa3\xce\xfe\x19\xaa\x18\x8e\xcd\xf7\x6f\xf3\xd1\x6a\x0d\xe6\x83\xd1\xb9\xc8\x29\xcf\x2c\xc3\x40\x18\xd7\xc4\xfe\xfd\xfe\x3b\x02\x24\xcd\x05\x35\x4f\x66\x3a\x4b\xed\xbe\x65\xb9\x3c\xdf\xd1\x64\x42\x5e\x55\xe6\xd4\x3f\xb5\x67\x7e\x95\xb7\x4b\x37\x8d\xe5\xe5\xda\x8b\x91\x70\xa3\x3d\x03\x57\x39\xca\x12\x73\x85\xb0\x81\x97\x2e\x9b\xb7\x75\x8b\x90\x6f\xdd\xaf\xa9\x66\x05\x46\x03\x56\xe0\x36\xbe\x99\x14\xdc\x22\x6c\xe7\x83\xe7\x3b\xf2\xcf\x6c\xec\x7c\xf4\x00\x00\x36\x84\x3b\x10\x0d\x58\xa8\xff\xad\x85\xfc\x6a\xb0\x23\xc4\x03\x11\x04\x76\xdb\xaa\x25\x2c\xb5\x1e\xbb\x5d\x88\xcd\xa1\x87\x7f\xfe\xfa\xfd\xef\x3f\xfe\xb4\x21\x68\xca\x57\xaf\xb7\x50\x3b\x5a\x2d\x7a\x8e\x7a\x76\xdd\xae\x56\x4c\x35\x35\x6b\xdd\x2c\xaf\x73\xa1\x84\xd4\xe6\xfc\x13\x32\xab\xa0\xc6\xb5\xbe\x79\xdd\x94\x50\x92\xa0\x8a\x89\x29\x5f\xce\xbc\x07\x35\x53\xc6\x67\xd3\x21\xa2\x37\x32\x41\x79\x7a\xdd\x54\x3d\x42\x57\xdb\xff\xb0\x64\x9e\x60\x4a\x27\xb9\xde\xc8\xd6\xe0\x15\xee\x97\xa9\xe6\xb6\x43\x38\x95\x2d\xea\x8f\x72\xa6\xdb\xe6\x21\x90\x90\xd4\xd7\x96\x8b\x10\xea\x69\x66\x8a\xab\x7d\xed\x75\x4a\x77\x09\x89\x2f\x31\xbe\x7a\xc9\xfb\x5a\x2e\x56\xf3\xd9\x6c\x77\xe9\x59\x99\xf2\xf5\xae\xbe\xf5\x21\x70\x17\x97\x76\x0d\x8f\xde\xa4\xa9\x42\xed\x5b\x88\xaf\x27\x05\x1c\xc3\xff\x03\x38\x72\x54\xb3\xdf\xb0\xd5\xde\xa2\x57\xac\xa8\x7d\xa9\x47\x6e\x0a\x60\xe5\xb9\xb3\x7e\x0f\xf9\xf0\xbf\x51\x0b\x5b\xed\x69\x2f\xd4\xc0\xaf\x2d\xfe\x2d\xf0\xf3\xed\x8a\x7b\xdf\x98\xac\xb4\xc0\xda\xbe\x68\x75\x0f\x96\xc3\xaf\x23\xbd\xed\x9b\xd2\xd6\xe6\x77\x6f\x94\xb4\x83\x70\xf6\x40\x55\x91\x07\x16\xf5\x83\x1e\xb6\x43\x3d\x6c\x67\xf2\xd7\x41\xe6\x3a\xc8\x5c\xf7\x97\xb9\x16\x1a\xa7\xfd\xa6\x3e\xa8\x58\x07\x15\x6b\xbf\x55\xac\x4d\xb1\xce\x25\xac\x0d\x90\xee\x56\xbc\xea\x1c\x94\xab\x83\x72\xf5\x85\x94\x2b\x93\x49\xff\x06\x00\x00\xff\xff\x49\xff\x6f\x5c\xef\x27\x00\x00")

func templateCurd_1TmplBytes() ([]byte, error) {
	return bindataRead(
		_templateCurd_1Tmpl,
		"template/curd_1.tmpl",
	)
}

func templateCurd_1Tmpl() (*asset, error) {
	bytes, err := templateCurd_1TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/curd_1.tmpl", size: 10223, mode: os.FileMode(420), modTime: time.Unix(1617504918, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateCurd_commonTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xcd\x6a\xc3\x30\x10\x84\xcf\xd6\x53\x0c\x3e\xd9\x25\x24\xf7\x82\x2f\x6d\x29\x14\x52\x68\xc9\x31\x84\xa0\xca\x6b\x77\xb1\xba\x8a\xa5\xf5\xa1\x04\xbf\x7b\xf1\x4f\x03\x85\x0a\x1d\x56\xf3\x69\x87\xef\x62\x5d\x67\x5b\x02\x8b\x52\x14\xeb\x8d\xe1\xaf\x4b\x88\x8a\xc2\x00\x40\x4e\xa2\x6d\xd8\x72\xd8\x91\xe8\xae\x66\xeb\xc9\x69\x3e\x23\x12\x4d\xbd\xff\xff\xc7\x2e\xf5\x3e\x37\xa5\x31\x2e\x48\x9a\xba\xb2\x43\xef\xdf\x6c\x4b\x7b\x4e\x0a\x54\xc8\x2f\xb6\xa5\xb3\xe7\xa4\xf9\x8d\x3d\x86\x41\xf4\xc6\xdc\xf4\x5a\xe0\x33\x4b\x8d\xf9\x54\xc8\x1b\x96\x7a\xae\x6e\x06\x71\x48\xbd\x7f\x18\xd8\xd7\x14\x8b\x12\x77\x8b\xd2\xf6\x69\x91\x58\x01\xae\x26\x8b\xa4\x43\x14\xfc\xe5\xc5\x2a\xbb\x7d\xfd\x3e\xbc\xef\x4b\x33\xae\x9d\xee\x93\x5c\xf7\x22\x07\x8d\x45\xcd\x09\xc7\x53\xd2\xc8\xd2\x6e\xd0\x61\x99\x4a\x7c\x84\xe0\xa7\xde\x26\x44\xf0\x06\x67\xdc\x57\x88\x56\x5a\xc2\xb4\x71\x35\x59\xc6\xcd\x34\x1e\xf9\x84\xaa\x42\x37\x47\xbf\x16\x1a\x07\x32\x59\x36\x9a\xe9\xae\x59\x63\x7d\x22\x33\xfe\x04\x00\x00\xff\xff\xda\xfd\x5c\xfb\x8e\x01\x00\x00")

func templateCurd_commonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateCurd_commonTmpl,
		"template/curd_common.tmpl",
	)
}

func templateCurd_commonTmpl() (*asset, error) {
	bytes, err := templateCurd_commonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/curd_common.tmpl", size: 398, mode: os.FileMode(420), modTime: time.Unix(1616719136, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateMarkdownTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xc1\x6a\xea\x40\x14\x86\xf7\x81\xbc\xc3\x81\xb8\x50\xb8\xc9\x03\x08\xf7\x6e\xae\x1b\xb9\x17\xeb\x42\xba\x11\x17\xb1\x9e\x16\x69\x92\x96\x68\xa0\x61\x66\xc0\x45\xa1\x85\xd2\xd6\x45\xc1\xac\x0a\x05\x11\xbb\xa8\x52\xda\x82\x98\x3e\x8e\x19\xf5\x2d\x4a\x66\x9c\xd4\x56\x9a\xc5\x84\xf9\xff\xc3\xf9\x4f\xbe\x13\xc3\x80\xd5\xc3\x98\xf7\x62\x3e\x3a\xd7\x35\x5d\xa3\xc9\xfc\x36\xb9\x1c\xd0\x54\x4d\xfa\xd7\x40\x61\x35\x7d\xe5\xd1\x0d\x50\x48\x86\x17\xfc\x65\x0c\x54\xd7\x68\xd1\x34\x4d\x71\xa8\x13\xe4\x4b\xd7\x08\xf1\x6d\xef\x08\xc1\xaa\xd9\x4d\x07\xff\xb7\x3b\x5d\xc6\x28\x10\x62\x95\xbd\x16\x9e\x31\x46\xeb\xe9\x45\x98\x15\xdb\x45\xc6\x1a\x79\xe3\xd3\xfd\x6a\x15\x40\x3e\x94\x10\xeb\xef\x89\xeb\xa2\x27\x9a\x89\x14\xf4\x5a\x8c\xa5\x03\xab\xc0\xdc\x31\x86\xbf\x20\xd7\xee\xa2\x0b\xc5\xdf\x60\x95\xb0\x73\x20\xe3\x75\xcd\x30\x0c\x20\x44\x78\x2a\xc9\x52\xf7\xad\x3c\x5d\xfb\x93\x95\x65\x79\x69\x86\x29\x68\x3c\x0d\xf8\xe4\x4d\xd2\x90\xa4\x84\x00\x14\x96\xcf\x71\x72\x7f\x05\x14\x78\x34\x4d\xfa\xa3\xc5\x6c\xbe\x7c\x9c\x53\x58\xc7\xd1\x6a\x32\x4c\x7a\xef\x99\xc3\xa3\xe9\x62\x16\xaf\xef\x26\xbb\x58\x15\x55\x73\x97\xed\x37\x61\x0b\xb2\x1c\x75\x03\x59\x40\x72\x02\xd7\x93\x1f\x03\x20\xb0\x4b\xa9\x16\x9e\x62\x25\x70\x9b\xe8\x33\x26\xf5\x72\xa7\x12\x38\xce\x66\x37\x25\x3c\xb4\x03\xa7\xbb\x6f\x3b\x01\xaa\x82\xaa\xdf\x76\x6d\x3f\xfc\x87\xa1\x52\x64\xab\x1f\x16\x51\xaf\xed\x55\x1b\x79\x23\xfb\x97\x0a\x99\xf7\x11\x00\x00\xff\xff\x54\x04\xaf\xad\x62\x02\x00\x00")

func templateMarkdownTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateMarkdownTmpl,
		"template/markdown.tmpl",
	)
}

func templateMarkdownTmpl() (*asset, error) {
	bytes, err := templateMarkdownTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/markdown.tmpl", size: 610, mode: os.FileMode(420), modTime: time.Unix(1599730646, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateModelTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6b\xbb\x40\x10\xc5\xcf\x99\x4f\x31\x88\xfc\xd1\x3f\x41\xef\x85\x9e\x12\x92\x5b\x7b\xf1\x56\x7a\x58\x75\x62\xb6\x71\x77\x65\x5d\xa1\xb2\xcc\x77\x2f\xab\x09\x31\x21\x34\x3d\xc9\x8c\xbf\xf7\x7c\xf3\xec\x44\x75\x12\x0d\xa1\x32\x35\xb5\x00\x52\x75\xc6\x3a\x4c\x60\xf5\xed\xa4\x22\x8c\x1a\xe9\x8e\x43\x99\x55\x46\xe5\x25\xe9\x9e\x94\xc8\x5b\x59\x5a\x61\xc7\x3c\x00\x11\xac\x96\x48\x7f\x34\x5d\xdf\x59\xa9\x9b\xbc\xa6\x4a\x2a\xd1\x46\x90\x02\x78\x6f\x85\x6e\x08\xe3\x13\x8d\x6b\x8c\x0b\x7c\x79\xc5\x8c\x19\xc0\x8d\x1d\xa1\xf7\x71\x91\x15\xa2\x6c\xe9\x4d\x28\xda\x1b\x66\xec\x9d\x1d\x2a\x87\xfe\xaa\xfc\x5a\x63\x2c\x1d\xa9\x49\x3a\xc1\x5b\xea\x2b\x66\x0c\xf2\xf0\xe2\xba\xcc\xf6\x66\x63\xda\x41\xe9\x60\x17\x88\xc7\x4c\x2b\x74\x53\x8c\xdd\x4c\x5c\x80\x9d\xb1\x4a\xb8\x9d\xa4\xb6\xee\x67\x73\x79\xc0\x7b\xed\xec\xbe\x31\x4a\x91\x76\x81\xca\xf3\x07\x5f\xb8\xa3\xbc\x27\x5d\x33\xc3\xf9\xc9\x00\x70\x18\x74\x85\x89\xc2\xff\xde\xdf\xde\x9f\xe2\x34\x26\x69\x28\x42\xea\x06\x3d\x58\x72\x83\xd5\x18\x2d\x51\xe6\x08\xf8\x57\x9b\x39\x43\x9f\xa4\xf8\xf1\x79\x6f\x75\xd9\x78\x7c\x5e\x72\x74\x39\x6f\x5b\xbe\x5b\x39\xd5\xc3\x1c\xad\xcf\xb7\x20\x3f\x89\x31\xf7\x39\xa5\x90\xda\x91\x3d\x88\x8a\x3c\x2f\xa3\x2c\xd6\x7f\xc9\xf3\x4f\x65\xcf\x7e\xfb\x6d\xb8\xf3\xf0\x13\x00\x00\xff\xff\xe3\x56\xf9\x8b\xee\x02\x00\x00")

func templateModelTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateModelTmpl,
		"template/model.tmpl",
	)
}

func templateModelTmpl() (*asset, error) {
	bytes, err := templateModelTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/model.tmpl", size: 750, mode: os.FileMode(420), modTime: time.Unix(1617263222, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateModel_replyTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\xb1\xaa\xc2\x40\x10\x46\xe1\xfa\xce\x53\xfc\x84\x54\x17\xc9\x03\x04\xec\x44\x3b\x11\x49\x27\x42\xc6\xec\x10\x62\x92\xd9\x90\x8c\xc5\xb2\xcc\xbb\x8b\xb6\xf6\x87\xc3\xb7\x70\x37\x72\x2f\x98\x63\x90\x89\x88\x72\x5e\x59\x7b\x41\x39\x4a\xda\xa1\x6c\x50\xef\x51\xb9\x13\x59\x5a\x04\xc7\x41\x43\xce\x65\x53\x35\xfc\x98\xe4\xcc\xb3\x9c\xa2\xfb\x55\x96\x29\x61\xb3\xf5\xd5\x19\x32\xfd\x1d\xd8\x18\xb7\xfb\xff\x6f\x89\xf6\xb9\x45\xad\x8b\xc0\xc6\x45\x4b\x00\x70\xe1\x7e\x50\xb6\x21\xea\x77\x43\xfe\x31\x88\x06\xf7\x77\x00\x00\x00\xff\xff\xe5\x78\xce\x90\x9b\x00\x00\x00")

func templateModel_replyTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateModel_replyTmpl,
		"template/model_reply.tmpl",
	)
}

func templateModel_replyTmpl() (*asset, error) {
	bytes, err := templateModel_replyTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/model_reply.tmpl", size: 155, mode: os.FileMode(420), modTime: time.Unix(1613992842, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateModel_reqTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x3d\x6f\xb3\x30\x10\xc7\xe7\xf8\x53\x9c\x2c\xc6\x88\xec\x91\x9e\xe5\x69\x95\x6c\x6d\xd5\x7a\x0f\x06\x2e\xae\x13\xec\x23\xc6\x48\x45\x96\xbf\x7b\x65\xa0\x0d\x2a\x4b\xbb\xa1\xe3\xf7\x7f\xf1\x5d\x2b\xab\xab\x54\x08\x86\x6a\x6c\x18\xd3\xa6\x25\xe7\xe1\xc3\x6b\x83\xc0\x95\xf6\xef\x7d\x99\x57\x64\x76\x25\xda\x0e\x8d\xdc\x35\xba\x74\xd2\x0d\xbb\x04\x70\xc6\x42\x70\xd2\x2a\x84\xec\x8a\xc3\x16\x32\x01\xfb\x7f\x90\xc7\xc8\x98\x1f\x5a\x84\x83\xb6\x75\x08\x99\xc8\x85\x2c\x1b\x7c\x92\x06\x8f\x14\xe3\x2b\xde\xa0\xf3\xae\xaf\x3c\x04\x06\x00\xb0\x46\xe6\xf1\xec\x7d\xd9\x42\xa6\x3d\x9a\xd1\x7c\xe4\x1e\xb1\xab\x66\x6a\x22\xf5\x19\xf0\x36\x51\x77\x22\x3f\x52\x23\xad\x12\xa9\x0a\xf0\xf1\x4d\xb9\x48\xbd\x17\xd2\x39\x7f\x25\x7c\xa0\xa6\x37\x36\xf5\x89\xf1\xe0\xc8\xc0\x5d\x0e\xc5\xa5\x23\xbb\xe7\x6b\xd9\x52\x74\x3a\x3b\x32\xbc\xf8\x53\x90\xa0\x65\x0c\xfc\x32\xc8\xd3\x22\x26\x04\xb4\xf5\xf7\x02\xa7\xef\xcd\xb3\xab\xd1\xfd\x1f\xd2\xd6\xb5\x55\x5f\xb6\x94\xa6\xa7\x72\xe0\x05\xdb\xbc\xa5\xab\x03\xfc\x20\x3a\x72\x3e\xfd\x7d\x91\x4a\x5b\xe9\x35\x59\x16\x59\x3a\xfa\xe8\xfb\x19\x00\x00\xff\xff\x7e\x59\xb0\x27\x3b\x02\x00\x00")

func templateModel_reqTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateModel_reqTmpl,
		"template/model_req.tmpl",
	)
}

func templateModel_reqTmpl() (*asset, error) {
	bytes, err := templateModel_reqTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/model_req.tmpl", size: 571, mode: os.FileMode(420), modTime: time.Unix(1617194810, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateOp_codeTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcc\xb1\xaa\xc2\x40\x10\x85\xe1\xfa\xce\x53\x0c\x21\xc5\x15\x24\x0f\x20\xa4\x10\x05\x3b\xd3\xc4\x5a\xc6\xcc\x21\x48\x36\xbb\x4b\xb2\x16\x61\x99\x77\x17\x04\xc1\x22\x5a\x9f\xf3\xfd\x51\xba\x41\x7a\xf0\x18\x14\x8e\x28\x2d\x11\xdc\xc4\x43\x50\xf0\x9c\xa6\xbb\xef\x89\xba\xe0\xe7\xf4\x4f\x39\x4f\xe2\x7b\x70\x39\x60\xd9\x72\xd9\xf2\xae\xe6\xca\x8c\xe8\xaf\x89\x39\x57\xad\xdc\x1c\xce\x32\xe2\x14\xcc\xf6\xaa\xcc\xfc\x0e\xd5\x5c\x7c\x1e\xcc\xae\xa2\x5a\xac\xb9\x23\xdc\x4f\xa7\x70\xab\xee\x12\x55\x12\xbe\xbb\xc7\x6b\x2f\x88\x72\x86\x57\x33\xda\x3c\x03\x00\x00\xff\xff\x81\xfb\xfd\x66\xf8\x00\x00\x00")

func templateOp_codeTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateOp_codeTmpl,
		"template/op_code.tmpl",
	)
}

func templateOp_codeTmpl() (*asset, error) {
	bytes, err := templateOp_codeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/op_code.tmpl", size: 248, mode: os.FileMode(420), modTime: time.Unix(1616846254, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatePageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4b\x6f\xdb\x3c\x10\x3c\x8b\xbf\x62\xc1\x93\x94\x38\x7e\x7c\xc7\x20\xba\x7d\xc7\x22\x0d\x92\xa2\xd7\x9a\x90\x29\x87\x2d\x45\x12\xe4\x0a\xa9\x9b\xf8\xbf\x17\x7c\xe8\x61\x59\x49\x7c\xe8\x49\xe0\xee\x6a\x66\x67\x76\x49\xc3\xaa\x5f\x6c\xcf\xa1\xd1\x3b\x2e\x09\x11\x8d\xd1\x16\x81\x72\x6b\xb5\x75\x94\x90\x4a\x2b\x87\x90\x93\x6c\xb5\x82\xff\x79\xcd\x5a\x89\x4f\xe2\x0f\x87\x25\xc9\xd2\xf1\xbe\x6d\x00\x4a\xd8\xf4\x81\x90\x2f\xe1\xbf\x35\x29\x08\x59\xad\xe0\x49\x34\x46\xf2\x07\xcf\x52\x31\x59\xb5\x92\x21\x07\x5a\x5b\xdd\xd0\x05\x50\xd4\x14\x5e\x04\x3e\xeb\x16\x01\x35\x32\xf9\xa3\xd2\xad\x42\xe7\xff\x8c\x45\x20\xd4\x8e\xff\x06\x87\xcc\x22\xf8\x08\x6c\x48\xdd\xaa\x0a\x72\x03\x57\x0f\x6c\x2f\x14\x43\xa1\x55\x31\x22\xca\x0b\xc8\x43\xa5\x50\xb8\x00\xd4\xfe\x5b\xc0\x2b\xc9\x44\x0d\x66\xe9\x3b\x2e\x4b\x58\xc3\xdb\x1b\x98\x65\x6c\xd7\x1f\x5f\x49\x96\x85\xec\xa2\x0f\xc3\x66\x31\x96\x4d\xb2\x23\xc9\x02\x70\x09\x79\x28\xbd\xd9\x14\x57\xa9\xf8\xda\x7b\x80\x1a\xca\xd8\xe4\x75\x07\x72\xe3\xe3\x96\x63\x6b\x15\x39\x06\x47\x3e\xf3\xe2\xcc\x88\x4b\x1d\x08\xda\xc3\xcf\x51\xf1\x25\x26\xf4\xaa\xe3\x10\x8f\x29\x3f\xb5\x25\xf9\x31\x31\x23\x14\x47\xc2\xce\xd1\x78\xba\x4b\x10\x57\xbd\x4d\x01\x27\xd9\x90\x58\x52\x69\xd9\xd1\x0d\x15\xde\xf7\x90\xfd\xdc\x71\x51\x43\x92\x7c\xd3\x19\xbf\x29\x7a\xfe\x31\xa6\xcf\x8e\x61\x4f\xc2\xe7\x33\x8b\xb3\xfa\xce\xf6\x2d\xff\x5a\xd7\x8e\xe3\x17\xd1\x08\x1c\xcf\x4d\x87\xb0\x9f\x9c\xf4\xa9\x77\x16\x79\x76\x52\x53\x58\xbf\xb1\x11\x2e\x8e\x2b\x00\xf6\x13\xeb\x3a\x87\xdb\xe8\xd5\xb0\xe7\xc9\xc7\xde\xfd\x68\x55\x37\xb6\xa4\x70\xbd\x80\xf5\x54\xb1\x97\x18\x20\x07\xd7\x92\xe2\x8f\xc5\x02\x53\x3b\xa0\x61\x15\xe7\x96\x75\x56\xec\x58\xe7\x78\x3b\x2f\x15\x3c\xac\xf5\x3f\xd7\x3b\x3f\x1c\x6e\x45\x7d\xc8\x0b\x08\xcf\xe0\xc9\x95\xb9\x3b\x65\x8a\xef\xe4\xf2\x9e\xbf\xe4\x54\xb5\x4d\x3c\xd3\x82\x64\x47\xe0\xd2\x71\x78\xff\xaa\x0d\xaf\xe7\xe4\xce\x7d\xc0\xe0\x7c\x7e\x96\xe2\xb2\xdb\xda\x61\x2a\x21\x87\x97\x28\xa9\x06\xc3\x6d\xad\x6d\x03\xc6\x3f\x4e\x4c\xee\xb5\x15\xf8\xdc\x10\x3c\x18\x3e\x2e\x73\x68\xdb\x0a\x3d\x4d\x78\xf8\x85\x42\xd8\xfe\x74\x5a\xdd\x7a\xfd\x74\x4b\xb2\x40\x3d\x0a\xfb\xa6\xe9\xf6\x8c\xef\x91\x1b\x79\x18\x03\x3f\x72\x67\xb4\x72\x7c\x39\xa5\x8c\x95\x03\x6f\x20\x98\x61\x88\x0d\xcd\x74\xf4\xad\x5b\xb9\x2e\x1e\x56\x29\xf4\xf4\x37\x00\x00\xff\xff\xa4\xc5\xc0\x7f\xff\x06\x00\x00")

func templatePageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatePageTmpl,
		"template/page.tmpl",
	)
}

func templatePageTmpl() (*asset, error) {
	bytes, err := templatePageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/page.tmpl", size: 1791, mode: os.FileMode(420), modTime: time.Unix(1613993637, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateServiceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xcb\x6e\x1b\x37\x14\x5d\x0f\xbf\xe2\x76\x90\x02\x33\xce\x64\x9c\x76\xe9\x54\x0b\xd7\x42\x0c\x03\xae\xdd\xda\x0a\xba\x30\x0c\x83\x1a\x5e\x8d\x59\xf1\x31\xe6\x50\xb1\x55\x61\x3e\xa1\xfb\x2e\xfa\x01\xdd\x74\xdf\x0f\x6a\xfe\xa3\x20\x29\xc9\xb2\x2c\xdb\x72\xfc\x48\x82\x68\xa5\x11\x79\x5f\x3c\x3c\xbc\x3c\xac\x68\xd1\xa7\x25\x42\x8d\xe6\x3d\x2f\x90\x10\x2e\x2b\x6d\x2c\x24\x24\x8a\xd1\x18\x6d\xea\x98\x44\x71\xc9\xed\xe9\xa0\x9b\x17\x5a\xae\x77\x51\xd5\x28\xe9\x7a\x17\x6d\x97\xdb\x75\xa9\x19\x8a\x1b\x4c\x04\xef\x1a\x6a\x86\xeb\x42\x97\x31\x89\x2e\x2c\x97\x08\xb7\xd9\x39\x83\xb9\x50\x3d\x6a\xf9\xe9\x7a\x6d\xcd\xa0\xb0\xf3\x95\x94\x5c\xbd\x2a\xb5\xe2\x85\xfb\x72\x73\xc1\x3f\x25\x64\x34\x32\x54\x95\x08\x2f\xfa\x38\xcc\xe0\x45\x07\x36\x5a\x90\x37\x8d\x9b\xe0\x3d\xc0\x33\xc8\x3b\xb4\x2b\x70\x8f\x4a\xdc\xd6\x10\x6f\x53\x89\x07\x58\x0f\x84\x8d\x9b\x86\xf4\x06\xaa\x80\xa4\x86\xb5\xc3\x00\x49\x0a\xa3\xd1\xac\x7d\xd3\xfc\x4c\x4b\xac\x93\x02\xd6\x4a\xae\xf2\x2d\xad\x2c\x5e\xd8\x0c\x4a\x2a\x71\x4b\x33\x84\xda\x1a\xae\xca\x0c\x0c\x9e\xc1\x9a\xc7\x27\x7f\xcb\x15\x9b\x8f\x72\x80\x67\x29\x24\x06\x2b\x31\xbc\xdd\xac\x12\xc3\x0c\xd0\x18\xf0\xfb\x91\xc2\x88\x44\xc1\xab\x05\x0a\xcf\x93\x3b\x5c\xd3\xb1\x75\xde\xa6\x96\x42\x0b\x24\xed\x63\x72\x74\x3c\xce\x38\xef\x92\xc1\xeb\x94\x44\xef\xa9\x81\x42\x0f\x94\x05\xae\x6c\xf8\xcb\xa8\xa5\x1d\x59\xc1\x8d\x9e\x24\xe2\xbd\xe0\x14\x8a\x6d\x41\x9d\x33\xaa\x73\x07\xd6\xa2\xe2\x3a\xda\x52\x91\x14\x97\xb8\x79\xc0\xd2\x37\xde\xf9\x9b\x16\x28\x2e\xdc\x4a\x23\x83\x76\x60\x14\x89\x1a\x72\x99\x01\x7e\x68\xc1\xeb\x45\xb3\xe3\x2a\x97\xab\xe0\x9e\xc9\xaf\xa0\x38\x4e\x34\x19\xf5\x8b\x81\x56\xa8\x6e\x32\xb8\x37\x90\xd0\x72\x71\xdd\xd7\x64\xf0\x90\xff\x8e\xe3\x51\xf7\x49\x26\x29\x1a\xb2\x04\xf1\x36\x19\xbb\x9b\x76\x12\x6e\xd8\xa1\x34\x10\x28\xf0\xa7\x0e\x18\x6d\x4c\x40\xda\x32\x48\x2d\xde\x0e\x91\x4c\x3d\xc8\x0b\x31\x72\xa3\x0e\xa7\x88\xb3\x0c\x4e\x5c\x5c\x83\x75\xbe\x4b\x6b\xbb\xa3\x6a\x34\x76\x87\x25\x29\x89\x64\xbe\xc3\xa0\xe5\x58\x95\x70\x96\x92\x48\xe8\x72\xbf\x0a\x45\xec\xe1\xf9\x26\x93\x5c\xed\xba\x21\x34\xd4\x62\x52\x4c\x2c\xc2\x6a\x95\x75\xf4\xf5\x4b\xdb\xd5\xe5\x5b\x8e\x82\x6d\x9d\xba\x73\x9e\xc8\xcc\x55\x93\x41\x8f\x8a\x1a\xa7\x4e\x07\x58\x68\xc3\x36\x9d\x97\xef\x3d\x79\x87\x4b\x4c\xfc\xd7\x9e\x3e\x4f\xd2\xfc\x9d\xe2\x17\x49\x3a\xb5\x0f\x69\xb9\x56\x1e\xce\xd6\x18\xd0\xf1\xf9\xda\xaf\x16\x6c\xc6\x75\xd7\x36\xaf\x2b\x41\x87\xce\x66\x5a\xec\x42\xd7\xfc\x30\x44\x9f\xa9\xd6\x35\xa0\xd9\x15\xee\x57\x61\x6c\xbf\x4f\xa2\x93\xab\x94\x0e\xbb\x35\x0b\x55\x06\x3e\x4c\x4a\x66\xf7\x63\x29\x52\xb5\x51\xdc\x4d\x2a\xce\xdc\xa6\xcd\x30\x48\x0b\x36\xc7\xa0\x6d\xb4\xf3\xa1\x7f\x1c\xee\xb0\xab\x14\xf2\xbb\x7e\x9d\x43\x42\x97\xf9\xaf\xd4\xa8\x5e\x12\x9f\x53\xa3\x16\xd5\xb8\x01\xdf\xd6\xb1\x4f\x99\x5e\x21\x9d\x36\x9e\x3b\x49\xbc\xd3\xfe\xef\xdf\x3f\x3e\xfc\xf3\xe7\x87\xbf\xfe\x3e\x7a\xf5\xdd\x71\x9c\x7a\x3a\xce\xa2\xd6\x46\x81\xd7\x39\xbe\x74\x91\x73\x44\xb7\xd2\x33\xf7\xb2\x05\x5f\x3b\x6f\x8f\xc6\x6f\xeb\x5a\x9a\x47\xdc\x9a\xc1\xb3\x11\xbc\x8d\xe2\x63\x09\xde\x46\xf1\xf9\x10\xfc\x97\x01\x9a\xe1\xf2\x14\x4f\x6e\xbc\x1a\x67\xef\x5f\x5f\xc2\x3d\x89\xbf\x54\xb5\xef\x2a\xe6\xd7\xfb\x18\x6d\x9e\x33\xc7\x3d\xd7\x74\x9f\xfb\xc0\x86\x55\xdc\xef\xcc\x7e\x3f\x39\xb3\xca\xd7\x18\x34\x9f\xb7\x73\x17\x8f\xca\x3b\xb4\x1c\xd3\x2e\xfe\xad\xd6\x4e\xf1\x9d\x28\x3c\xf7\x67\x30\xff\x89\x56\x49\x4a\x48\xa4\xe7\x5d\xb5\x70\x0b\xd0\x8b\x9c\xb5\xf0\xf0\xe8\xa9\x73\x4f\x1b\x38\xc9\xa0\x8f\x43\x7f\x7f\x79\x09\x29\xf3\x2d\x2d\x06\x52\xd5\x89\xdf\x78\x07\x85\xcb\x7a\xd4\xc7\xe1\xb1\x03\xc4\x45\x09\x7f\xdc\x6c\x74\x32\x65\x70\x40\x60\x19\x80\x7d\xc6\xec\x32\xac\xc3\xaa\x09\x9a\xe3\xa1\xfd\xa3\x83\xb2\x4a\x62\xce\xe2\x90\x67\xe6\x92\x84\x97\x10\xbf\x89\xe1\xe5\x8d\x17\xea\xb3\xb7\x9b\x00\xd8\xc7\x76\x9c\xe0\xfd\x64\x4d\x67\xae\xeb\x8c\x46\x28\x6a\x7c\xc0\x63\x61\xf5\x36\x58\xea\x6d\xf0\x09\x5e\x04\x5f\xea\x3b\xe0\xb1\x65\xff\x4a\xec\x7f\x2d\x62\xff\x61\xda\xfe\x33\x56\xf4\x2b\x1d\xff\x15\xe8\xf8\xa7\x90\xed\x0f\x15\xeb\x4f\xaa\xcd\x57\x8a\xfc\x49\x14\xf9\x4a\x87\x7f\x99\x3a\x5c\xb1\x66\xfa\xfb\x7f\x00\x00\x00\xff\xff\xfc\xf1\x90\x1f\xcd\x18\x00\x00")

func templateServiceTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateServiceTmpl,
		"template/service.tmpl",
	)
}

func templateServiceTmpl() (*asset, error) {
	bytes, err := templateServiceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/service.tmpl", size: 6349, mode: os.FileMode(420), modTime: time.Unix(1617280890, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/admin_cmd.tmpl":         templateAdmin_cmdTmpl,
	"template/admin_command_biz.tmpl": templateAdmin_command_bizTmpl,
	"template/bb_admin_api_biz.tmpl":  templateBb_admin_api_bizTmpl,
	"template/bb_admin_biz.tmpl":      templateBb_admin_bizTmpl,
	"template/biz.tmpl":               templateBizTmpl,
	"template/curd.tmpl":              templateCurdTmpl,
	"template/curd_1.tmpl":            templateCurd_1Tmpl,
	"template/curd_common.tmpl":       templateCurd_commonTmpl,
	"template/markdown.tmpl":          templateMarkdownTmpl,
	"template/model.tmpl":             templateModelTmpl,
	"template/model_reply.tmpl":       templateModel_replyTmpl,
	"template/model_req.tmpl":         templateModel_reqTmpl,
	"template/op_code.tmpl":           templateOp_codeTmpl,
	"template/page.tmpl":              templatePageTmpl,
	"template/service.tmpl":           templateServiceTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"admin_cmd.tmpl":         &bintree{templateAdmin_cmdTmpl, map[string]*bintree{}},
		"admin_command_biz.tmpl": &bintree{templateAdmin_command_bizTmpl, map[string]*bintree{}},
		"bb_admin_api_biz.tmpl":  &bintree{templateBb_admin_api_bizTmpl, map[string]*bintree{}},
		"bb_admin_biz.tmpl":      &bintree{templateBb_admin_bizTmpl, map[string]*bintree{}},
		"biz.tmpl":               &bintree{templateBizTmpl, map[string]*bintree{}},
		"curd.tmpl":              &bintree{templateCurdTmpl, map[string]*bintree{}},
		"curd_1.tmpl":            &bintree{templateCurd_1Tmpl, map[string]*bintree{}},
		"curd_common.tmpl":       &bintree{templateCurd_commonTmpl, map[string]*bintree{}},
		"markdown.tmpl":          &bintree{templateMarkdownTmpl, map[string]*bintree{}},
		"model.tmpl":             &bintree{templateModelTmpl, map[string]*bintree{}},
		"model_reply.tmpl":       &bintree{templateModel_replyTmpl, map[string]*bintree{}},
		"model_req.tmpl":         &bintree{templateModel_reqTmpl, map[string]*bintree{}},
		"op_code.tmpl":           &bintree{templateOp_codeTmpl, map[string]*bintree{}},
		"page.tmpl":              &bintree{templatePageTmpl, map[string]*bintree{}},
		"service.tmpl":           &bintree{templateServiceTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
